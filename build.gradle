
plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.3.31'
    id 'com.gradle.plugin-publish' version '0.10.1'
    id 'java-gradle-plugin'
    id 'groovy'
}




repositories {
    mavenCentral()
    jcenter()
}


group 'net.kebernet'
version '1.0-SNAPSHOT'


dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    testCompile('org.spockframework:spock-core:1.1-groovy-2.4') {
        exclude group: 'org.codehaus.groovy'
    }
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
}


sourceSets {
    functionalTest {
        groovy.srcDir file('src/functional/groovy')
        java.srcDir file('src/functional/java')
        resources.srcDir file('src/functional/resources')
        compileClasspath += sourceSets.main.output + configurations.testRuntime
        runtimeClasspath += output + compileClasspath
    }
}

task functionalTest(type: Test) {
    description = 'Runs the functional tests.'
    group = 'verification'
    testClassesDirs = sourceSets.functionalTest.output.classesDirs
    classpath = sourceSets.functionalTest.runtimeClasspath
    mustRunAfter test //, integrationTest
    testLogging {
        showStandardStreams = true
    }
}

check.dependsOn functionalTest

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

pluginBundle {
    website = "https://github.com/atl-tw/world-engine"
    vcsUrl = "https://github.com/atl-tw/world-engine.git"
    description = "Opinionated Terraform"
    tags = ['terraform', 'aws', 'gcp', 'azure']

    plugins {
        worldEngine {
            id = 'net.kebernet.world-engine'
            displayName = "World Engine"
            description = "Opinionated Terraform"
        }
    }
}

gradlePlugin {
    plugins {
        worldEngine {
            id = 'net.kebernet.world-engine'
            implementationClass = 'net.kebernet.worldengine.WorldEngine'
        }
    }
}